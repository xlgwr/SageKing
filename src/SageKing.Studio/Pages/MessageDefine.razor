@page "/MessageDefine"

<PageTitle>消息结构定义</PageTitle>

@inject IConfirmService _confirmService
@inject SysSageKingMessageService dataService
@inject SysSageKingMessageAttributeService dataDetailService

@{
    RenderFragment icon = @<Icon Type="exclamation-circle" Theme="outline"></Icon>;

    RenderFragment FormTemplate()
    {
        return@<SysSageKingMessageEdit @ref=@edit Title="@addTitle" model="@addModel"></SysSageKingMessageEdit>;
    }

    RenderFragment footer = @<Template>
        <Button OnClick="@HandleOk" @key="@( "submit" )"
                Type="primary"
                Loading="@addloading">
            保存
        </Button>
        <Button OnClick="@HandleCancel" @key="@( "back" )">取消</Button>
    </Template>
    ;

    Func<ModalClosingEventArgs, Task> onOk = (e) =>
    {
        _visible = false;
        return Task.CompletedTask;
    };
    Func<ModalClosingEventArgs, Task> onCancel = (e) =>
    {
        _visible = true;
        return Task.CompletedTask;
    };

    async Task HandleOk(MouseEventArgs e)
    {
        addloading = true;
        if (edit != null)
        {
            var result = await edit.Save();
            if (!result)
            {
                addloading = false;
                return;
            }
        }
        await QueryList();
        _visible = false;
        addloading = false;
    }

    void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    } 
}

@if (dataList == null)
{
    <Spin size="large" Tip="Loading..." />
}
else
{
    <Card Title="消息结构列表" Style="min-height:600px; overflow:auto;">

        <Table @ref="table" TItem="SysSageKingMessage" DataSource="@dataSource" OnChange="OnChange"
               @bind-SelectedRows="@selectedRows" RowKey="a=>a.Id.ToString()" OnRowClick="OnRowClick"
               OnExpand="OnRowExpand" Size=@TableSize.Middle Resizable Bordered TableLayout="fixed">
            <TitleTemplate>
                <GridRow>
                    <GridCol Span="4">
                        <Search Placeholder="Search Name" @bind-Value="searchString" OnSearch="()=>table?.ReloadData()" AllowClear="true" />
                    </GridCol>
                    <GridCol Span="8">
                        <Button Type="@ButtonType.Primary" OnClick="@AddData">新增</Button>
                    </GridCol>
                </GridRow>
            </TitleTemplate>
            <ColumnDefinitions>
                <Selection Key="@context.Id.ToString()" Type="@selectionType"></Selection>
                <PropertyColumn Property="c=>c.Name" Title="消息名称" DefaultSortOrder="@SortDirection.Descending" />
                <PropertyColumn Property="c=>c.Type" Title="Type" DefaultSortOrder="@SortDirection.Descending" />
                <PropertyColumn Property="c=>c.Status" Title="Status" DefaultSortOrder="@SortDirection.Descending" />
                <PropertyColumn Property="c=>c.Description" Title="描述信息" Ellipsis />
                <PropertyColumn Property="c=>c.Version" Title="Version"></PropertyColumn>
                <PropertyColumn Property="c=>c.Id" Title="Id" DefaultSortOrder="@SortDirection.Descending" />
                <ActionColumn Title="Action">
                    <Space Size=@("middle")>
                        <SpaceItem>
                            <Button OnClick="(e)=>EditData(context)">修改</Button>
                            <Popconfirm Title="确认删除?"
                                        OnConfirm="(e) => DeleteData(context)"
                                        OkText="Yes"
                                        CancelText="No">
                                <Button Danger>删除</Button>
                            </Popconfirm>
                        </SpaceItem>
                    </Space>
                </ActionColumn>
            </ColumnDefinitions>
            <ExpandTemplate Context="rowData">
                <Table TItem="SysSageKingMessageAttribute" DataSource="rowData.Data.Children" Loading="rowData.Data.Children==null" HidePagination Size=@TableSize.Middle
                       @bind-SelectedRows="@selectedRowsAttr" RowKey="a=>a.Id.ToString()" OnRowClick="OnRowAttrClick" Resizable Bordered>
                    <Selection Key="@context.Id.ToString()" Type="@selectionType"></Selection>
                    <PropertyColumn Property="c=>c.Name" Title="属性名称" DefaultSortOrder="@SortDirection.Descending" />
                    <PropertyColumn Property="c=>c.Type" Title="Type" DefaultSortOrder="@SortDirection.Descending" />
                    <PropertyColumn Property="c=>c.Status" Title="Status" DefaultSortOrder="@SortDirection.Descending" />
                    <PropertyColumn Property="c=>c.Id" Title="Id" DefaultSortOrder="@SortDirection.Descending" />
                    <PropertyColumn Property="c=>c.MessageId" Title="MessageId"></PropertyColumn>
                    <ActionColumn Title="Action">
                        <Space Size=@("middle")>
                            <SpaceItem>
                                <Popconfirm Title="确认删除?"
                                            OnConfirm="() => DeleteDataDetails(context,rowData.Data.Id)"
                                            OkText="Yes"
                                            CancelText="No">
                                    <a>删除</a>
                                </Popconfirm>
                            </SpaceItem>
                        </Space>
                    </ActionColumn>
                </Table>
            </ExpandTemplate>
        </Table>

    </Card>
    <Modal Title="@addTitle" Resizable=true Footer="@footer" 
           @bind-Visible="@_visible" Draggable="@(true)" Centered >

        @FormTemplate()
    </Modal>
}



@code {

    bool loading;
    bool _visible = false;

    [CascadingParameter]
    public Error? Error { get; set; }

    string addTitle = "新增";
    SysSageKingMessage addModel;

    bool addloading = false;
    SysSageKingMessageEdit edit;

    string searchString;
    ITable table;
    string selectionType = "checkbox";

    List<SysSageKingMessage> dataList;
    IEnumerable<SysSageKingMessage> dataSource;

    IEnumerable<SysSageKingMessage> selectedRows;
    IEnumerable<SysSageKingMessageAttribute> selectedRowsAttr;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await QueryList();
    }

    public async Task QueryList()
    {
        var getPage = await dataService.GetPage(new PageBaseInput() { Page = 1, PageSize = 20 });
        dataSource = dataList = getPage.Items.ToList();
    }

    public async Task<List<SysSageKingMessageAttribute>> QueryDetailList(long ParentId)
    {
        Expression<Func<SysSageKingMessageAttribute, bool>> func = a => a.MessageId == ParentId;
        return await dataDetailService.GetList(func);
    }

    private async void OnRowClick(RowData<SysSageKingMessage> data)
    {
        var row = data.Data;
        // model.Id = row.Id;
        // model.Name = row.Name;
        // model.Description = row.Description;
        // model.Type = row.Type;
        // model.Version = row.Version;

        await QueryDetailList(row.Id);
    }

    private void OnRowAttrClick(RowData<SysSageKingMessageAttribute> data)
    {
        var row = data.Data;
        // model2.Name = row.Name;
        // model2.Type = row.Type;
    }

    private async void OnRowExpand(RowData<SysSageKingMessage> data)
    {
        data.Data.Children = await QueryDetailList(data.Data.Id);
    }

    void OnChange(QueryModel<SysSageKingMessage> query)
    {
        dataSource = query.ExecuteQuery(dataList.AsQueryable())
            .Where(x => string.IsNullOrWhiteSpace(searchString) || x.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase));
    }

    private void AddData()
    {
        addModel = new SysSageKingMessage();
        addTitle = "消息新增";
        _visible = true;
    }

    async void EditData(SysSageKingMessage row)
    {

    }

    async void DeleteData(SysSageKingMessage row)
    {
        dataList.Remove(row);
        await dataService.Delete(row.Id);
    }

    async void DeleteDataDetails(SysSageKingMessageAttribute row, long parentId)
    {
        await dataDetailService.Delete(row.Id);
        await QueryDetailList(parentId);
    }

}
